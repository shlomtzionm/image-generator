{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shlom\\\\Documents\\\\image-grnerator\\\\Frontend\\\\src\\\\Components\\\\GeneratorArea\\\\Generator\\\\Generator.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Generator.css\";\nimport SendIcon from '@mui/icons-material/Send';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Generator() {\n  _s();\n  const [imageDescription, setImageDescription] = useState(\"\");\n  const [imageSource, setImageSource] = useState();\n  const [loading, setLoading] = useState(false);\n  function handleChange(args) {\n    setImageDescription(args.target.value);\n  }\n  async function generateImage() {\n    try {\n      setLoading(true);\n      setImageSource(\"\");\n      // const url:string = await dallEService.generateImage(imageDescription);\n      // setImageSource(url);\n    } catch (error) {\n      alert(error.error);\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: handleChange,\n      value: imageDescription,\n      placeholder: \"Describe the image to generate..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n      size: \"small\",\n      onClick: generateImage,\n      endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this),\n      loading: loading,\n      loadingPosition: \"end\",\n      variant: \"contained\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), imageSource !== \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSource\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Generator, \"in6VWYsk9HuRhrm9CMJzKCuI2ys=\");\n_c = Generator;\nvar _c;\n$RefreshReg$(_c, \"Generator\");","map":{"version":3,"names":["useState","SendIcon","LoadingButton","jsxDEV","_jsxDEV","Generator","_s","imageDescription","setImageDescription","imageSource","setImageSource","loading","setLoading","handleChange","args","target","value","generateImage","error","alert","console","log","className","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","endIcon","loadingPosition","variant","src","_c","$RefreshReg$"],"sources":["C:/Users/shlom/Documents/image-grnerator/Frontend/src/Components/GeneratorArea/Generator/Generator.tsx"],"sourcesContent":["import { ChangeEvent, useState } from \"react\";\nimport \"./Generator.css\";\nimport { dallEService } from \"../../../Services/dallEService\";\nimport SendIcon from '@mui/icons-material/Send';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nexport function Generator(): JSX.Element {\n  const [imageDescription, setImageDescription] = useState<string>(\"\");\n  const [imageSource, setImageSource] = useState<string>();\n  const [loading, setLoading] = useState(false);\n\n  function handleChange(args: ChangeEvent<HTMLTextAreaElement>) {\n    setImageDescription(args.target.value);\n  }\n\n  async function generateImage() {\n    try {\n      setLoading(true);\n      setImageSource(\"\");\n      // const url:string = await dallEService.generateImage(imageDescription);\n      // setImageSource(url);\n      \n    } catch (error: any) {\n      alert(error.error);\n      console.log(error);\n      \n    }\n  }\n  return (\n    <div className=\"Generator\">\n      <textarea onChange={handleChange} value={imageDescription} placeholder=\"Describe the image to generate..\"></textarea>\n      <LoadingButton\n          size=\"small\"\n          onClick={generateImage}\n          endIcon={<SendIcon />}\n          loading={loading}\n          loadingPosition=\"end\"\n          variant=\"contained\"\n        >\n          Send\n        </LoadingButton>\n\n{imageSource !== \"\"  && <img src={imageSource}/>}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAAsBA,QAAQ,QAAQ,OAAO;AAC7C,OAAO,iBAAiB;AAExB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,SAASC,SAASA,CAAA,EAAgB;EAAAC,EAAA;EACvC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EACpE,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAS,CAAC;EACxD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,SAASa,YAAYA,CAACC,IAAsC,EAAE;IAC5DN,mBAAmB,CAACM,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC;EACxC;EAEA,eAAeC,aAAaA,CAAA,EAAG;IAC7B,IAAI;MACFL,UAAU,CAAC,IAAI,CAAC;MAChBF,cAAc,CAAC,EAAE,CAAC;MAClB;MACA;IAEF,CAAC,CAAC,OAAOQ,KAAU,EAAE;MACnBC,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;MAClBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAEpB;EACF;EACA,oBACEd,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAUoB,QAAQ,EAAEX,YAAa;MAACG,KAAK,EAAET,gBAAiB;MAACkB,WAAW,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACrHzB,OAAA,CAACF,aAAa;MACV4B,IAAI,EAAC,OAAO;MACZC,OAAO,EAAEd,aAAc;MACvBe,OAAO,eAAE5B,OAAA,CAACH,QAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MACtBlB,OAAO,EAAEA,OAAQ;MACjBsB,eAAe,EAAC,KAAK;MACrBC,OAAO,EAAC,WAAW;MAAAX,QAAA,EACpB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,EAEvBpB,WAAW,KAAK,EAAE,iBAAKL,OAAA;MAAK+B,GAAG,EAAE1B;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACvB,EAAA,CAvCeD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}