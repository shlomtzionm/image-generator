{"ast":null,"code":"import _objectSpread from \"C:/Users/shlom/Documents/image-grnerator/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { NumberInputActionTypes } from \"./numberInputAction.types.js\";\nimport { clampStepwise, isNumber } from \"./utils.js\";\nfunction getClampedValues(rawValue, context) {\n  const {\n    min,\n    max,\n    step\n  } = context;\n  const clampedValue = rawValue === null ? null : clampStepwise(rawValue, min, max, step);\n  const newInputValue = clampedValue === null ? '' : String(clampedValue);\n  return {\n    value: clampedValue,\n    inputValue: newInputValue\n  };\n}\nfunction stepValue(state, context, direction, multiplier) {\n  const {\n    value\n  } = state;\n  const {\n    step = 1,\n    min,\n    max\n  } = context;\n  if (isNumber(value)) {\n    return {\n      up: value + (step !== null && step !== void 0 ? step : 1) * multiplier,\n      down: value - (step !== null && step !== void 0 ? step : 1) * multiplier\n    }[direction];\n  }\n  return {\n    up: min !== null && min !== void 0 ? min : 1,\n    down: max !== null && max !== void 0 ? max : -1\n  }[direction];\n}\nfunction handleClamp(state, context, inputValue) {\n  const {\n    getInputValueAsString\n  } = context;\n  const numberValueAsString = getInputValueAsString(inputValue);\n  const intermediateValue = numberValueAsString === '' || numberValueAsString === '-' ? null : parseInt(numberValueAsString, 10);\n  const clampedValues = getClampedValues(intermediateValue, context);\n  return _objectSpread(_objectSpread({}, state), clampedValues);\n}\nfunction handleInputChange(state, context, inputValue) {\n  const {\n    getInputValueAsString\n  } = context;\n  const numberValueAsString = getInputValueAsString(inputValue);\n  if (numberValueAsString.match(/^-?\\d+?$/) || numberValueAsString === '' || numberValueAsString === '-') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      inputValue: numberValueAsString\n    });\n  }\n  return state;\n}\n\n// use this for ArrowUp, ArrowDown, button clicks\n// use this with applyMultiplier: true for PageUp, PageDown, button shift-clicks\nfunction handleStep(state, context, applyMultiplier, direction) {\n  const multiplier = applyMultiplier ? context.shiftMultiplier : 1;\n  const newValue = stepValue(state, context, direction, multiplier);\n  const clampedValues = getClampedValues(newValue, context);\n  return _objectSpread(_objectSpread({}, state), clampedValues);\n}\nfunction handleToMinOrMax(state, context, to) {\n  const newValue = context[to];\n  if (!isNumber(newValue)) {\n    return state;\n  }\n  return _objectSpread(_objectSpread({}, state), {}, {\n    value: newValue,\n    inputValue: String(newValue)\n  });\n}\nexport function numberInputReducer(state, action) {\n  const {\n    type,\n    context\n  } = action;\n  switch (type) {\n    case NumberInputActionTypes.clamp:\n      return handleClamp(state, context, action.inputValue);\n    case NumberInputActionTypes.inputChange:\n      return handleInputChange(state, context, action.inputValue);\n    case NumberInputActionTypes.increment:\n      return handleStep(state, context, action.applyMultiplier, 'up');\n    case NumberInputActionTypes.decrement:\n      return handleStep(state, context, action.applyMultiplier, 'down');\n    case NumberInputActionTypes.incrementToMax:\n      return handleToMinOrMax(state, context, 'max');\n    case NumberInputActionTypes.decrementToMin:\n      return handleToMinOrMax(state, context, 'min');\n    case NumberInputActionTypes.resetInputValue:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        inputValue: String(state.value)\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["NumberInputActionTypes","clampStepwise","isNumber","getClampedValues","rawValue","context","min","max","step","clampedValue","newInputValue","String","value","inputValue","stepValue","state","direction","multiplier","up","down","handleClamp","getInputValueAsString","numberValueAsString","intermediateValue","parseInt","clampedValues","_objectSpread","handleInputChange","match","handleStep","applyMultiplier","shiftMultiplier","newValue","handleToMinOrMax","to","numberInputReducer","action","type","clamp","inputChange","increment","decrement","incrementToMax","decrementToMin","resetInputValue"],"sources":["C:/Users/shlom/Documents/image-grnerator/Frontend/node_modules/@mui/base/unstable_useNumberInput/numberInputReducer.js"],"sourcesContent":["import { NumberInputActionTypes } from \"./numberInputAction.types.js\";\nimport { clampStepwise, isNumber } from \"./utils.js\";\nfunction getClampedValues(rawValue, context) {\n  const {\n    min,\n    max,\n    step\n  } = context;\n  const clampedValue = rawValue === null ? null : clampStepwise(rawValue, min, max, step);\n  const newInputValue = clampedValue === null ? '' : String(clampedValue);\n  return {\n    value: clampedValue,\n    inputValue: newInputValue\n  };\n}\nfunction stepValue(state, context, direction, multiplier) {\n  const {\n    value\n  } = state;\n  const {\n    step = 1,\n    min,\n    max\n  } = context;\n  if (isNumber(value)) {\n    return {\n      up: value + (step ?? 1) * multiplier,\n      down: value - (step ?? 1) * multiplier\n    }[direction];\n  }\n  return {\n    up: min ?? 1,\n    down: max ?? -1\n  }[direction];\n}\nfunction handleClamp(state, context, inputValue) {\n  const {\n    getInputValueAsString\n  } = context;\n  const numberValueAsString = getInputValueAsString(inputValue);\n  const intermediateValue = numberValueAsString === '' || numberValueAsString === '-' ? null : parseInt(numberValueAsString, 10);\n  const clampedValues = getClampedValues(intermediateValue, context);\n  return {\n    ...state,\n    ...clampedValues\n  };\n}\nfunction handleInputChange(state, context, inputValue) {\n  const {\n    getInputValueAsString\n  } = context;\n  const numberValueAsString = getInputValueAsString(inputValue);\n  if (numberValueAsString.match(/^-?\\d+?$/) || numberValueAsString === '' || numberValueAsString === '-') {\n    return {\n      ...state,\n      inputValue: numberValueAsString\n    };\n  }\n  return state;\n}\n\n// use this for ArrowUp, ArrowDown, button clicks\n// use this with applyMultiplier: true for PageUp, PageDown, button shift-clicks\nfunction handleStep(state, context, applyMultiplier, direction) {\n  const multiplier = applyMultiplier ? context.shiftMultiplier : 1;\n  const newValue = stepValue(state, context, direction, multiplier);\n  const clampedValues = getClampedValues(newValue, context);\n  return {\n    ...state,\n    ...clampedValues\n  };\n}\nfunction handleToMinOrMax(state, context, to) {\n  const newValue = context[to];\n  if (!isNumber(newValue)) {\n    return state;\n  }\n  return {\n    ...state,\n    value: newValue,\n    inputValue: String(newValue)\n  };\n}\nexport function numberInputReducer(state, action) {\n  const {\n    type,\n    context\n  } = action;\n  switch (type) {\n    case NumberInputActionTypes.clamp:\n      return handleClamp(state, context, action.inputValue);\n    case NumberInputActionTypes.inputChange:\n      return handleInputChange(state, context, action.inputValue);\n    case NumberInputActionTypes.increment:\n      return handleStep(state, context, action.applyMultiplier, 'up');\n    case NumberInputActionTypes.decrement:\n      return handleStep(state, context, action.applyMultiplier, 'down');\n    case NumberInputActionTypes.incrementToMax:\n      return handleToMinOrMax(state, context, 'max');\n    case NumberInputActionTypes.decrementToMin:\n      return handleToMinOrMax(state, context, 'min');\n    case NumberInputActionTypes.resetInputValue:\n      return {\n        ...state,\n        inputValue: String(state.value)\n      };\n    default:\n      return state;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}